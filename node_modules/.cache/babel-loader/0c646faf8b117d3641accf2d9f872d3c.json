{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { createContext, useReducer } from 'react';\nimport posts from '../components/Feed/postData.json';\nconst initialState = {\n  posts: posts\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_POST':\n      {\n        return { ...state,\n          posts: [...state.posts, action.payload.post]\n        };\n      }\n\n    case 'INIT_POSTS':\n      {\n        return { ...state,\n          posts: [...state.posts, ...action.payload.posts]\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport const usePost = () => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, { ...initialState\n  });\n\n  const initMyPost = posts => {\n    dispatch({\n      type: 'INIT_POSTS',\n      payload: {\n        posts\n      }\n    });\n  };\n\n  const addMyPost = post => {\n    dispatch({\n      type: 'ADD_POST',\n      payload: {\n        post\n      }\n    });\n  };\n\n  return {\n    state,\n    actions: {\n      initPost: posts => {\n        initMyPost(posts);\n      },\n      addPost: post => {\n        addMyPost(post);\n      }\n    }\n  };\n};\n\n_s(usePost, \"bSvaITlNCMdqD5eB9rWU/S9thIk=\");\n\nconst init = {\n  state: initialState,\n  actions: {}\n};\nexport const PostContext = /*#__PURE__*/createContext(init);","map":{"version":3,"sources":["/home/amit/nayan/new-react/src/context/posts.tsx"],"names":["createContext","useReducer","posts","initialState","reducer","state","action","type","payload","post","usePost","dispatch","initMyPost","addMyPost","actions","initPost","addPost","init","PostContext"],"mappings":";;AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;AACA,OAAOC,KAAP,MAAkB,kCAAlB;AA8BA,MAAMC,YAA0B,GAAG;AACjCD,EAAAA,KAAK,EAAEA;AAD0B,CAAnC;;AAGA,MAAME,OAAO,GAAG,CACdC,KAAmB,GAAGF,YADR,EAEdG,MAFc,KAGX;AACH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AAAiB;AACf,eAAO,EACL,GAAGF,KADE;AAELH,UAAAA,KAAK,EAAE,CAAC,GAAGG,KAAK,CAACH,KAAV,EAAiBI,MAAM,CAACE,OAAP,CAAeC,IAAhC;AAFF,SAAP;AAID;;AACD,SAAK,YAAL;AAAmB;AACjB,eAAO,EACL,GAAGJ,KADE;AAELH,UAAAA,KAAK,EAAE,CAAC,GAAGG,KAAK,CAACH,KAAV,EAAiB,GAAGI,MAAM,CAACE,OAAP,CAAeN,KAAnC;AAFF,SAAP;AAID;;AACD;AAAS;AACP,eAAOG,KAAP;AACD;AAfH;AAiBD,CArBD;;AAsBA,OAAO,MAAMK,OAAO,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACL,KAAD,EAAQM,QAAR,IAAoBV,UAAU,CAACG,OAAD,EAAU,EAC5C,GAAGD;AADyC,GAAV,CAApC;;AAGA,QAAMS,UAAU,GAAIV,KAAD,IAAwB;AACzCS,IAAAA,QAAQ,CAAC;AACPJ,MAAAA,IAAI,EAAE,YADC;AAEPC,MAAAA,OAAO,EAAE;AACPN,QAAAA;AADO;AAFF,KAAD,CAAR;AAMD,GAPD;;AAQA,QAAMW,SAAS,GAAIJ,IAAD,IAAgB;AAChCE,IAAAA,QAAQ,CAAC;AACPJ,MAAAA,IAAI,EAAE,UADC;AAEPC,MAAAA,OAAO,EAAE;AACPC,QAAAA;AADO;AAFF,KAAD,CAAR;AAMD,GAPD;;AAQA,SAAO;AACLJ,IAAAA,KADK;AAELS,IAAAA,OAAO,EAAE;AACPC,MAAAA,QAAQ,EAAGb,KAAD,IAAwB;AAChCU,QAAAA,UAAU,CAACV,KAAD,CAAV;AACD,OAHM;AAIPc,MAAAA,OAAO,EAAGP,IAAD,IAAgB;AACvBI,QAAAA,SAAS,CAACJ,IAAD,CAAT;AACD;AANM;AAFJ,GAAP;AAWD,CA/BM;;GAAMC,O;;AAgCb,MAAMO,IAAI,GAAG;AACXZ,EAAAA,KAAK,EAAEF,YADI;AAEXW,EAAAA,OAAO,EAAE;AAFE,CAAb;AAIA,OAAO,MAAMI,WAAW,gBAAGlB,aAAa,CAASiB,IAAT,CAAjC","sourcesContent":["import { createContext, useReducer } from 'react';\nimport posts from '../components/Feed/postData.json';\ntype post = {\n  title: string;\n  text: string;\n};\n\ntype InitialState = {\n  posts: Array<post>;\n};\ntype Actions = {\n  addPost: (post: post) => void;\n};\n\ntype ReducerActionTypes =\n  | {\n      type: 'ADD_POST';\n      payload: {\n        post: post;\n      };\n    }\n  | {\n      type: 'INIT_POSTS';\n      payload: {\n        posts: Array<post>;\n      };\n    };\ntype myType = {\n  state: InitialState;\n  actions: any;\n};\nconst initialState: InitialState = {\n  posts: posts,\n};\nconst reducer = (\n  state: InitialState = initialState,\n  action: ReducerActionTypes\n) => {\n  switch (action.type) {\n    case 'ADD_POST': {\n      return {\n        ...state,\n        posts: [...state.posts, action.payload.post],\n      };\n    }\n    case 'INIT_POSTS': {\n      return {\n        ...state,\n        posts: [...state.posts, ...action.payload.posts],\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\nexport const usePost = () => {\n  const [state, dispatch] = useReducer(reducer, {\n    ...initialState,\n  } as InitialState);\n  const initMyPost = (posts: Array<post>) => {\n    dispatch({\n      type: 'INIT_POSTS',\n      payload: {\n        posts,\n      },\n    });\n  };\n  const addMyPost = (post: post) => {\n    dispatch({\n      type: 'ADD_POST',\n      payload: {\n        post,\n      },\n    });\n  };\n  return {\n    state,\n    actions: {\n      initPost: (posts: Array<post>) => {\n        initMyPost(posts);\n      },\n      addPost: (post: post) => {\n        addMyPost(post);\n      },\n    },\n  };\n};\nconst init = {\n  state: initialState,\n  actions: {},\n};\nexport const PostContext = createContext<myType>(init);\n"]},"metadata":{},"sourceType":"module"}